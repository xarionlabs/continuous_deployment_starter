services:
  app_1_application:
    image: "ghcr.io/xarionlabs/continuous_deployment_starter/app_1:${APP_VERSION}"
    depends_on:
      - db
    environment:
      VIRTUAL_HOST: ${APP_1_VIRTUAL_HOST}
      POSTGRES_USER: app_1
      POSTGRES_HOST: db
      POSTGRES_DB: app_1
    expose:
      - "8080"
    networks:
      - db_network
      - proxy_network
    restart: unless-stopped
    secrets:
      - PSQL_APP_1_PASSWORD
      - STREAMLIT_OAUTH_CLIENT_ID
      - STREAMLIT_OAUTH_CLIENT_SECRET
      - STREAMLIT_OAUTH_COOKIE_SECRET

  app_1_api:
    image: "ghcr.io/xarionlabs/continuous_deployment_starter/app_1:${APP_VERSION}"
    depends_on:
      - db
      - user_management
      - app_1_migrations
    environment:
      VIRTUAL_HOST: ${APP_1_API_VIRTUAL_HOST}
      POSTGRES_USER: app_1
      POSTGRES_HOST: db
      POSTGRES_DB: app_1
    entrypoint: ["entrypoint_api.sh"]
    expose:
      - "8000"
    networks:
      - db_network
      - proxy_network
    restart: unless-stopped
    secrets:
      - PSQL_APP_1_PASSWORD

  app_1_migrations:
    image: "ghcr.io/xarionlabs/continuous_deployment_starter/app_1:${APP_VERSION}"
    depends_on:
      - db
      - user_management
    environment:
      POSTGRES_USER: app_1_migrations
      POSTGRES_HOST: db
      POSTGRES_DB: app_1
      PYTHONPATH: /app/src:$(PYTHONPATH)
    entrypoint: ["entrypoint_migrations.sh"]
    restart: "no"
    secrets:
      - PSQL_APP_1_MIGRATIONS_PASSWORD

networks:
  db_network:
    driver: bridge
  proxy_network:
    driver: bridge

