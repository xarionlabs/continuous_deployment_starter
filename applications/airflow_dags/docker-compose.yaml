version: '3.8'

services:
  db:
    image: docker.io/postgres:16.6
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: airflow_test
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow_network
    restart: unless-stopped

  airflow-dags:
    build: .
    working_dir: /app
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./entrypoints:/app/entrypoints
    environment:
      PYTHONPATH: /app/src
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: airflow_test
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      SHOPIFY_SHOP_NAME: ${SHOPIFY_SHOP_NAME:-test-shop}
      SHOPIFY_ACCESS_TOKEN: ${SHOPIFY_ACCESS_TOKEN:-test-token}
      DEVELOPMENT: "true"
    depends_on:
      - db
    networks:
      - airflow_network
    entrypoint: ["./entrypoints/entrypoint.sh", "--interactive"]

  airflow-dags-test:
    build: .
    working_dir: /app
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./entrypoints:/app/entrypoints
    environment:
      PYTHONPATH: /app/src
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: airflow_test
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      SHOPIFY_SHOP_NAME: ${SHOPIFY_SHOP_NAME:-test-shop}
      SHOPIFY_ACCESS_TOKEN: ${SHOPIFY_ACCESS_TOKEN:-test-token}
      DEVELOPMENT: "true"
    depends_on:
      - db
    networks:
      - airflow_network
    entrypoint: ["./entrypoints/entrypoint_test.sh"]

  airflow-dags-e2e:
    build: .
    working_dir: /app
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./entrypoints:/app/entrypoints
    environment:
      PYTHONPATH: /app/src
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: airflow_test
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      SHOPIFY_SHOP_NAME: ${SHOPIFY_SHOP_NAME:-test-shop}
      SHOPIFY_ACCESS_TOKEN: ${SHOPIFY_ACCESS_TOKEN:-test-token}
      DEVELOPMENT: "true"
    depends_on:
      - db
    networks:
      - airflow_network
    entrypoint: ["./entrypoints/entrypoint_e2e.sh"]

volumes:
  postgres_data:

networks:
  airflow_network:
    driver: bridge