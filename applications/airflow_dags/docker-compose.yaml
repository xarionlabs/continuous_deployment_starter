version: '3.8'

services:
  db:
    image: docker.io/postgres:16.6
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: airflow_test
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow_network
    restart: unless-stopped

  airflow-standalone:
    user: airflow
    image: apache/airflow:3.0.2
    volumes:
      - ./dags:/opt/airflow/dags
      - airflow_plugins:/opt/airflow/plugins
      - airflow_logs:/opt/airflow/logs
      - ./src:/opt/airflow/src
      - ./setup.py:/opt/airflow/setup.py
      - ./pyproject.toml:/opt/airflow/pyproject.toml
      - ./requirements.txt:/opt/airflow/requirements.txt
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:localpassword@db:5432/airflow_test
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__WEBSERVER__SECRET_KEY: 'a25c62d375079c43344b91f38ad6fce29d2a9a31456e15e5c5d8ec4f'
      PYTHONPATH: /opt/airflow/dags
      SHOPIFY_SHOP_NAME: ${SHOPIFY_SHOP_NAME:-test-shop}
      SHOPIFY_ACCESS_TOKEN: ${SHOPIFY_ACCESS_TOKEN:-test-token}
      DEVELOPMENT: "true"
      # Ensure DAG dependencies are available
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PIP_NO_CACHE_DIR: "1"
    depends_on:
      - db
    networks:
      - airflow_network
    ports:
      - "8080:8080"
    command: |
      bash -c "
        
        echo 'Installing DAG dependencies...'
        if [ -f /opt/airflow/requirements.txt ]; then
          pip install --no-cache-dir -r /opt/airflow/requirements.txt
        else
          echo 'Requirements file not found, skipping dependency installation'
        fi
        
        echo 'Installing pxy6 package...'
        if [ -f /opt/airflow/setup.py ]; then
          cd /opt/airflow && pip install --no-cache-dir -e .
          echo 'pxy6 package installed successfully'
        else
          echo 'No setup.py found, skipping pxy6 package installation'
        fi
        
        echo 'Verifying pxy6 installation...'
        python -c 'import pxy6; print(\"pxy6 package imported successfully\")'
        
        echo 'Starting Airflow standalone...'
        airflow standalone &
        AIRFLOW_PID=$$!
        
        # Wait for Airflow to fully start
        echo 'Waiting for Airflow to start...'
        for i in {1..60}; do
          if curl -f http://localhost:8080/api/v2/monitor/health >/dev/null 2>&1; then
            echo 'Airflow is ready!'
            break
          fi
          sleep 2
        done
        
        # Update admin password
        echo 'Setting admin password to admin...'
        echo '{\"admin\": \"admin\"}' > /opt/airflow/simple_auth_manager_passwords.json.generated
        
        echo '===================='
        echo 'Airflow is ready!'
        echo 'URL: http://localhost:8080'
        echo 'Username: admin'
        echo 'Password: admin'
        echo '===================='
        
        # Keep the process running
        wait $$AIRFLOW_PID
      "

  airflow-dags:
    build: .
    working_dir: /app
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./entrypoints:/app/entrypoints
    environment:
      PYTHONPATH: /app/src
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: airflow_test
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      SHOPIFY_SHOP_NAME: ${SHOPIFY_SHOP_NAME:-test-shop}
      SHOPIFY_ACCESS_TOKEN: ${SHOPIFY_ACCESS_TOKEN:-test-token}
      DEVELOPMENT: "true"
    depends_on:
      - db
    networks:
      - airflow_network
    entrypoint: ["./entrypoints/entrypoint.sh", "--interactive"]

  airflow-dags-test:
    build: .
    working_dir: /app
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./entrypoints:/app/entrypoints
    environment:
      PYTHONPATH: /app/src
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: airflow_test
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      SHOPIFY_SHOP_NAME: ${SHOPIFY_SHOP_NAME:-test-shop}
      SHOPIFY_ACCESS_TOKEN: ${SHOPIFY_ACCESS_TOKEN:-test-token}
      DEVELOPMENT: "true"
    depends_on:
      - db
    networks:
      - airflow_network
    entrypoint: ["./entrypoints/entrypoint_test.sh"]

  airflow-dags-e2e:
    build: .
    working_dir: /app
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./entrypoints:/app/entrypoints
    environment:
      PYTHONPATH: /app/src
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: airflow_test
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      SHOPIFY_SHOP_NAME: ${SHOPIFY_SHOP_NAME:-test-shop}
      SHOPIFY_ACCESS_TOKEN: ${SHOPIFY_ACCESS_TOKEN:-test-token}
      DEVELOPMENT: "true"
    depends_on:
      - db
    networks:
      - airflow_network
    entrypoint: ["./entrypoints/entrypoint_e2e.sh"]

volumes:
  postgres_data:
  airflow_plugins:
  airflow_logs:

networks:
  airflow_network:
    driver: bridge