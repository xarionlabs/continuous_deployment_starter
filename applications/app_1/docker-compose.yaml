version: '3.8'

services:
  db:
    image: docker.io/postgres:16.6
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db_network
    restart: unless-stopped

  app:
    build: .
    depends_on:
      - db
    working_dir: /opt
    volumes:
      - ./src:/opt/src
      - ./entrypoints:/opt/entrypoints
    entrypoint: ["./entrypoints/entrypoint_app.sh"]
    env_file:
      - .env
    environment:
      POSTGRES_USER: postgres
      PSQL_POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: mydatabase
      POSTGRES_HOST: db
      DEVELOPMENT: "true"
    ports:
      - "8080:8080"
    networks:
      - db_network

  api:
    build: .
    depends_on:
      - db
    working_dir: /opt
    volumes:
      - ./src:/opt/src
      - ./test:/opt/test
      - ./entrypoints:/opt/entrypoints
    entrypoint: ["./entrypoints/entrypoint_api.sh"]
    environment:
      POSTGRES_USER: postgres
      PSQL_POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: mydatabase
      POSTGRES_HOST: db
      API_KEY: test_api_key
      DEVELOPMENT: "true"
    ports:
      - "8000:8000"
    networks:
      - db_network
      - api_network

  generate_migrations:
    build: .
    depends_on:
      - db
    working_dir: /opt
    volumes:
      - ./src:/opt/src
      - ./entrypoints:/opt/entrypoints
    entrypoint: ["./entrypoints/entrypoint_migrations.sh"]
    environment:
      PYTHONPATH: /src
      POSTGRES_USER: postgres
      PSQL_POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: mydatabase
      POSTGRES_HOST: db
    networks:
      - db_network

  e2e_tests:
    build: .
    depends_on:
      - api
    working_dir: /opt
    volumes:
      - ./src:/opt/src
      - ./e2e_tests:/opt/e2e_tests
      - ./entrypoints:/opt/entrypoints
    environment:
      PYTHONPATH: /opt/src
      APP_1_API_VIRTUAL_HOST: api
      STAGING_API_KEY: test_api_key
      POSTGRES_USER: postgres
      PSQL_POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: mydatabase
      POSTGRES_HOST: db
    networks:
      - db_network
      - api_network
    entrypoint: ["./entrypoints/entrypoint_e2e.sh"]

volumes:
  postgres_data:

networks:
  db_network:
    driver: bridge
  api_network:
    driver: bridge