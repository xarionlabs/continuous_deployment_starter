name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: 
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: create commit tag name
      id: create-commit-tag-name
      run: |
        echo "COMMIT_TAG=$(date +'%Y%m%d-%H%M%S')" >> "$GITHUB_ENV"
    - name: Finding applications that have dockerfiles in them
      id: finding-buildable-applications
      run: |
        {
          echo 'APPLICATION_NAMES<<EOF'
          find applications -type d -exec test -e '{}'/Dockerfile \; -print | sed "s/applications\///"
          echo EOF
        } >> "$GITHUB_ENV"
    - name: Build the Docker image for each application
      id: build-images
      run: |
        for i in $APPLICATION_NAMES; do
          docker build applications/${i} --file applications/${i}/Dockerfile --tag ghcr.io/xarionlabs/${i}:${COMMIT_TAG}
        done
    - name: Run tests on each Docker image
      id: test-images
      run: |
        for i in $APPLICATION_NAMES; do
          docker run --entrypoint=/app/test.sh ${i}:${COMMIT_TAG}
        done
    - name: list the images
      id: list-images
      run: |
        docker images
    - name: list the images
      id: publish-artifacts
      run: |
        for i in $APPLICATION_NAMES; do
          docker push ghcr.io/xarionlabs/${i}:${COMMIT_TAG}
        done
    - name: Create tag
      uses: actions/github-script@v5
      with:
        script: |
          const commit_tag = process.env.COMMIT_TAG
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/tags/${commit_tag}`,
            sha: context.sha
          })
    
